<UserControl x:Class="ArmaBrowser.Views.Controls.AddonsControl"  x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:ArmaBrowser.ViewModel"
             xmlns:logic="clr-namespace:ArmaBrowser.Logic"
             xmlns:properties="clr-namespace:ArmaBrowser.Properties"
             xmlns:armaBrowser="clr-namespace:ArmaBrowser"
             xmlns:converter="clr-namespace:ArmaBrowser.Views.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="330" d:DataContext="{d:DesignInstance Type=viewModel:ServerListViewModel}">
    <UserControl.Resources>

        <converter:ShowShareAddonConverter x:Key="ShowShareAddonConverter"/>
        <converter:ShowEasyInstallAddonConverter x:Key="ShowEasyInstallAddonConverter"/>
        
        <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                
                                <!-- Share  -->
                                <Button Grid.Column="1" Command="armaBrowser:ArmaBrowserCommands.UploadAddon" CommandParameter="{Binding Path=.}" BorderThickness="0" Background="Transparent"
                                        ToolTip="upload and share"
                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                        Visibility="{Binding Path=.,Converter={StaticResource ShowShareAddonConverter}}"  >
                                    <Image Source="/Img/shareaddon.png" Stretch="None">
                                        <FrameworkElement.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="OpacityMask" Value="#BA000000"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="OpacityMask" Value="#FF000000"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </FrameworkElement.Style>
                                    </Image>
                                </Button>

                                <!-- EasyInstallAddon  -->
                                <Button Grid.Column="1" Command="armaBrowser:ArmaBrowserCommands.EasyInstallAddon" CommandParameter="{Binding Path=.}" BorderThickness="0" Background="Transparent"
                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                        Visibility="{Binding Path=.,Converter={StaticResource ShowEasyInstallAddonConverter}}"
                                        ToolTip="Download and equip">
                                    <Image Source="/Img/DownloadAddon.png" Stretch="None">
                                        <FrameworkElement.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="OpacityMask" Value="#BA000000"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="OpacityMask" Value="#FF000000"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </FrameworkElement.Style>
                                    </Image>
                                </Button>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ResourceKey=ListBoxItemStyle2}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip>
                        <TextBlock Text="{Binding Path}"/>
                    </ToolTip>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsActive}" Value="true">
                    <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <ListBox Grid.Row="0" x:Name="AddonsListBox" ItemsSource="{Binding Path=Addons}" 
                 BorderThickness="1" BorderBrush="#FF688CAF"
                 Foreground="{StaticResource ForegroundNormalBrush}"
                 FontSize="14"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectedItem="{Binding Path=SelectedAddon}"
                 MouseUp="ListBox_MouseUp" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" >
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Bold" FontSize="14" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Name}" Value="False">
                                                <Setter Property="Text" Value="installed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Name}" Value="True">
                                                <Setter Property="Text" Value="can install"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type logic:IAddon}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="0" IsChecked="{Binding Path=IsActive}" Margin="0,3"
                                  FontSize="8"
                                  Background="YellowGreen"
                                  Foreground="Black">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource OnOffCheckBoxStyle}">
                                    <Setter Property="ToolTip" Value="Activate addon"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="ToolTip" Value="Deactivate addon"/>
                                        </Trigger>

                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                            <CheckBox.RenderTransform>
                                <ScaleTransform  ScaleX="1.1" ScaleY="1.1" />
                            </CheckBox.RenderTransform>
                        </CheckBox>
                        <Image Grid.Column="1" Source="/Img/cert24.png" Stretch="None"  Margin="0,-2,1,0"
                               >
                            <FrameworkElement.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=CanActived}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </FrameworkElement.Style>
                        </Image>
                        <TextBlock Grid.Column="2" Text="{Binding Path=DisplayText}">
                            <FrameworkElement.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=CanActived}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </FrameworkElement.Style>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,3">

            <CheckBox IsChecked="{Binding Path=SelectAllAceptedAddons, Source={x:Static properties:Settings.Default}}"
                      Style="{StaticResource OnOffCheckBoxStyle}"
                      Background="YellowGreen"
                      Foreground="Black"
                      Margin="3,0,3,3"
                      Checked="ToggleButton_OnChecked"
                      BorderThickness="0"
                      ToolTip="Select all accepted Addons" Height="15" VerticalAlignment="Bottom" 
                      />
            <StackPanel Orientation="Horizontal" >
                <Image Grid.Column="1" Source="/Img/cert24.png" Stretch="None"  Margin="3,0,1,0" Height="19"  IsHitTestVisible="False"/>
                <TextBlock VerticalAlignment="Center" Padding="4" IsHitTestVisible="False">Activate all accepted</TextBlock>
            </StackPanel>

        </StackPanel>
    </Grid>
</UserControl>
